// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ArticleList renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <ArticleContainer
        article={
            Object {
                "body": "body",
                "date": "01/01/01",
                "id": "articleA",
                "title": "Article A",
              }
        }
    />
    <ArticleContainer
        article={
            Object {
                "body": "body",
                "date": "01/01/01",
                "id": "articleB",
                "title": "Article B",
              }
        }
    />
</div>,
  "nodes": Array [
    <div>
      <ArticleContainer
            article={
                  Object {
                        "body": "body",
                        "date": "01/01/01",
                        "id": "articleA",
                        "title": "Article A",
                      }
            }
      />
      <ArticleContainer
            article={
                  Object {
                        "body": "body",
                        "date": "01/01/01",
                        "id": "articleB",
                        "title": "Article B",
                      }
            }
      />
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_context": Object {},
    "_didScheduleRenderPhaseUpdate": false,
    "_dispatcher": Object {
      "readContext": [Function],
      "useCallback": [Function],
      "useContext": [Function],
      "useDebugValue": [Function],
      "useDeferredValue": [Function],
      "useEffect": [Function],
      "useImperativeHandle": [Function],
      "useLayoutEffect": [Function],
      "useMemo": [Function],
      "useReducer": [Function],
      "useRef": [Function],
      "useResponder": [Function],
      "useState": [Function],
      "useTransition": [Function],
    },
    "_element": <ArticleList
      articles={
            Object {
                  "a": Object {
                    "body": "body",
                    "date": "01/01/01",
                    "id": "articleA",
                    "title": "Article A",
                  },
                  "b": Object {
                    "body": "body",
                    "date": "01/01/01",
                    "id": "articleB",
                    "title": "Article B",
                  },
                }
      }
/>,
    "_firstWorkInProgressHook": null,
    "_forcedUpdate": false,
    "_instance": null,
    "_isReRender": false,
    "_newState": null,
    "_numberOfReRenders": 0,
    "_renderPhaseUpdates": null,
    "_rendered": <div>
      <ArticleContainer
            article={
                  Object {
                        "body": "body",
                        "date": "01/01/01",
                        "id": "articleA",
                        "title": "Article A",
                      }
            }
      />
      <ArticleContainer
            article={
                  Object {
                        "body": "body",
                        "date": "01/01/01",
                        "id": "articleB",
                        "title": "Article B",
                      }
            }
      />
</div>,
    "_rendering": false,
    "_updater": Updater {
      "_callbacks": Array [],
      "_renderer": [Circular],
    },
    "_workInProgressHook": null,
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ArticleList
    articles={
        Object {
            "a": Object {
              "body": "body",
              "date": "01/01/01",
              "id": "articleA",
              "title": "Article A",
            },
            "b": Object {
              "body": "body",
              "date": "01/01/01",
              "id": "articleB",
              "title": "Article B",
            },
          }
    }
/>,
}
`;
